/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hdrapp;

import com.drew.imaging.ImageMetadataReader;
import com.drew.imaging.ImageProcessingException;
import com.drew.metadata.Metadata;
import com.drew.metadata.MetadataException;
import com.drew.metadata.exif.ExifSubIFDDirectory;
import java.awt.FlowLayout;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import org.opencv.core.Mat;
import org.opencv.imgcodecs.Imgcodecs;

/**
 *
 * @author Raquel Escalante
 * @author Rafael Vasquez
 */
public class LoadDialog extends javax.swing.JDialog {
    private int numSec;
    private JFileChooser fcOpen;
    private Mat[] myImages;
    private double[] myExpTimes;
    private JLabel[] imageLabels;
    private JPanel imagesPanel;
    
    /**
     * Creates new form LoadDialog
     * @param parent
     * @param modal
     */
    public LoadDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        numSec = 3;
        fcOpen = null;
        myImages = new Mat[]{null, null, null, null, null};
        myExpTimes = new double[]{0, 0, 0, 0, 0};
        imageLabels = new JLabel[5];
        imageLabels[0] = new JLabel();
        imageLabels[1] = new JLabel();
        imageLabels[2] = new JLabel();
        imageLabels[3] = new JLabel();
        imageLabels[4] = new JLabel();
        imagesPanel = new JPanel();
        imagesPanel.setLayout(new FlowLayout());
        imagesPanel.add(imageLabels[0]);
        imagesPanel.add(imageLabels[1]);
        imagesPanel.add(imageLabels[2]);
        imagesPanel.add(imageLabels[3]);
        imagesPanel.add(imageLabels[4]);
        imagesPanel.setVisible(true);
        SecuenciaScrollPane.getViewport().add(imagesPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InstructionsLabel = new javax.swing.JLabel();
        SequenceLabel = new javax.swing.JLabel();
        ImgChooser1 = new javax.swing.JPanel();
        imgPath1 = new javax.swing.JTextField();
        OpenImg1 = new javax.swing.JButton();
        expTime1 = new javax.swing.JTextField();
        ImgChooser2 = new javax.swing.JPanel();
        imgPath2 = new javax.swing.JTextField();
        OpenImg2 = new javax.swing.JButton();
        expTime2 = new javax.swing.JTextField();
        ImgChooser3 = new javax.swing.JPanel();
        imgPath3 = new javax.swing.JTextField();
        OpenImg3 = new javax.swing.JButton();
        expTime3 = new javax.swing.JTextField();
        ImgChooser4 = new javax.swing.JPanel();
        imgPath4 = new javax.swing.JTextField();
        OpenImg4 = new javax.swing.JButton();
        expTime4 = new javax.swing.JTextField();
        ImgChooser5 = new javax.swing.JPanel();
        imgPath5 = new javax.swing.JTextField();
        OpenImg5 = new javax.swing.JButton();
        expTime5 = new javax.swing.JTextField();
        expTimesLabel = new javax.swing.JLabel();
        SecuenciaScrollPane = new javax.swing.JScrollPane();
        AceptarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cargar imágenes de secuencia");

        InstructionsLabel.setText("Instrucciones: Por favor seleccione las imágenes en orden de menor a mayor tiempo de exposición");

        SequenceLabel.setText("Secuencia:");

        imgPath1.setEditable(false);

        OpenImg1.setText("Abrir Imagen 1");
        OpenImg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenImg1ActionPerformed(evt);
            }
        });

        expTime1.setEditable(false);

        javax.swing.GroupLayout ImgChooser1Layout = new javax.swing.GroupLayout(ImgChooser1);
        ImgChooser1.setLayout(ImgChooser1Layout);
        ImgChooser1Layout.setHorizontalGroup(
            ImgChooser1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgPath1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(OpenImg1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(expTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ImgChooser1Layout.setVerticalGroup(
            ImgChooser1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ImgChooser1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgPath1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenImg1)
                    .addComponent(expTime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imgPath2.setEditable(false);

        OpenImg2.setText("Abrir Imagen 2");
        OpenImg2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenImg2ActionPerformed(evt);
            }
        });

        expTime2.setEditable(false);

        javax.swing.GroupLayout ImgChooser2Layout = new javax.swing.GroupLayout(ImgChooser2);
        ImgChooser2.setLayout(ImgChooser2Layout);
        ImgChooser2Layout.setHorizontalGroup(
            ImgChooser2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgPath2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(OpenImg2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(expTime2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ImgChooser2Layout.setVerticalGroup(
            ImgChooser2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ImgChooser2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgPath2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenImg2)
                    .addComponent(expTime2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imgPath3.setEditable(false);

        OpenImg3.setText("Abrir Imagen 3");
        OpenImg3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenImg3ActionPerformed(evt);
            }
        });

        expTime3.setEditable(false);

        javax.swing.GroupLayout ImgChooser3Layout = new javax.swing.GroupLayout(ImgChooser3);
        ImgChooser3.setLayout(ImgChooser3Layout);
        ImgChooser3Layout.setHorizontalGroup(
            ImgChooser3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgPath3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(OpenImg3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(expTime3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ImgChooser3Layout.setVerticalGroup(
            ImgChooser3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ImgChooser3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgPath3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenImg3)
                    .addComponent(expTime3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imgPath4.setEditable(false);

        OpenImg4.setText("Abrir Imagen 4");
        OpenImg4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenImg4ActionPerformed(evt);
            }
        });

        expTime4.setEditable(false);

        javax.swing.GroupLayout ImgChooser4Layout = new javax.swing.GroupLayout(ImgChooser4);
        ImgChooser4.setLayout(ImgChooser4Layout);
        ImgChooser4Layout.setHorizontalGroup(
            ImgChooser4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgPath4, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(OpenImg4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(expTime4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ImgChooser4Layout.setVerticalGroup(
            ImgChooser4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ImgChooser4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgPath4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenImg4)
                    .addComponent(expTime4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imgPath5.setEditable(false);

        OpenImg5.setText("Abrir Imagen 5");
        OpenImg5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenImg5ActionPerformed(evt);
            }
        });

        expTime5.setEditable(false);

        javax.swing.GroupLayout ImgChooser5Layout = new javax.swing.GroupLayout(ImgChooser5);
        ImgChooser5.setLayout(ImgChooser5Layout);
        ImgChooser5Layout.setHorizontalGroup(
            ImgChooser5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgPath5, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(OpenImg5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(expTime5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ImgChooser5Layout.setVerticalGroup(
            ImgChooser5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImgChooser5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ImgChooser5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imgPath5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenImg5)
                    .addComponent(expTime5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        expTimesLabel.setText("Tiempos de Exposición (Segs.)");

        AceptarButton.setText("Aceptar");
        AceptarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AceptarButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SecuenciaScrollPane)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SequenceLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(InstructionsLabel)
                                .addGap(32, 32, 32)
                                .addComponent(expTimesLabel))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ImgChooser5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ImgChooser4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ImgChooser3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ImgChooser2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ImgChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InstructionsLabel)
                    .addComponent(expTimesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ImgChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ImgChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ImgChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ImgChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ImgChooser5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(SequenceLabel)
                .addGap(18, 18, 18)
                .addComponent(SecuenciaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AceptarButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setFileChooser(JFileChooser fc){
        fcOpen = fc;
    }
    
    public void setChoosers(int n){
        numSec = n;
        switch (n) {
            case 3:
                ImgChooser4.setVisible(false);
                imgPath4.setText("");
                expTime4.setText("");
                myImages[3] = null;
                ImgChooser5.setVisible(false);
                imgPath5.setText("");
                expTime5.setText("");
                myImages[4] = null;
                imageLabels[3].setIcon( null );
                imageLabels[4].setIcon( null );
                break;
            case 4:
                ImgChooser4.setVisible(true);
                ImgChooser5.setVisible(false);
                imgPath5.setText("");
                expTime5.setText("");
                myImages[4] = null;
                imageLabels[4].setIcon( null );
                break;
            default:
                ImgChooser4.setVisible(true);
                ImgChooser5.setVisible(true);
                break;
        }
    }
    
    public static BufferedImage mat2Img(Mat in){
        BufferedImage out = new BufferedImage(in.width(), in.height(), BufferedImage.TYPE_3BYTE_BGR);
        byte[] data = ((DataBufferByte) out.getRaster().getDataBuffer()).getData();
        in.get(0, 0, data);
        return out;
    } 
    
    public JPanel getImageSequencePanel(){
        return imagesPanel;
    }

    public void setImageSequencePanel(JPanel pn){
        imagesPanel = pn;
        SecuenciaScrollPane.getViewport().add(imagesPanel);
    }

    private void updateSequenceImageGUI(BufferedImage imgMsc, int i){
        int mWidth, mHeight;
        
        mHeight = SecuenciaScrollPane.getHeight() - 16; // 16 is the margin of the scrollPane
        mWidth = (int)(((double)mHeight / (double)imgMsc.getHeight()) * (double)imgMsc.getWidth());

        BufferedImage myResize = new BufferedImage(mWidth, mHeight, imgMsc.getType());
        Graphics2D g = myResize.createGraphics();
        g.drawImage(imgMsc, 0, 0, mWidth, mHeight, null);
        g.dispose();

        ImageIcon icon = new ImageIcon(myResize);
        // Adding the ImageIcon to the Label.
        imageLabels[i].setIcon( icon );
        //Aligning the image to the center.
        imageLabels[i].setHorizontalAlignment(JLabel.CENTER);
        //Adding the label to the Scrolling pane.

        // Repainting the scroll pane to update the changes
        SecuenciaScrollPane.repaint();
    }

    private void updateGUIImagePath(int i, String path){
        switch(i){
            case 0:
                imgPath1.setText(path);
                break;
            case 1:
                imgPath2.setText(path);
                break;
            case 2:
                imgPath3.setText(path);
                break;
            case 3:
                imgPath4.setText(path);
                break;
            case 4:
                imgPath5.setText(path);
                break;
        }
    }
    
    private void updateGUIImageExposureTime(int i, String time){
        switch(i){
            case 0:
                expTime1.setText(time);
                break;
            case 1:
                expTime2.setText(time);
                break;
            case 2:
                expTime3.setText(time);
                break;
            case 3:
                expTime4.setText(time);
                break;
            case 4:
                expTime5.setText(time);
                break;
        }
    }

    private void loadIntoMatImage(int i){
        int returnVal = fcOpen.showOpenDialog(this);
        String expTime = "N/A";
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                File file = fcOpen.getSelectedFile();
                Metadata metadata = ImageMetadataReader.readMetadata(file);
                ExifSubIFDDirectory directory = metadata.getFirstDirectoryOfType(ExifSubIFDDirectory.class);

                // Filling double with image file EXIF exposure time
                if(directory != null){
                    myExpTimes[i] = directory.getDouble(ExifSubIFDDirectory.TAG_EXPOSURE_TIME);
                    expTime = String.format("%.6f", myExpTimes[i]);
                }
                //System.out.println("Exposure time is -> " + eTime);

                // Filling Mat with image file information
                myImages[i] = Imgcodecs.imread(file.getAbsolutePath());

                // Updating GUI
                updateGUIImagePath( i, file.getAbsolutePath());
                updateGUIImageExposureTime( i, expTime);
                BufferedImage myImg = mat2Img(myImages[i]);
                updateSequenceImageGUI(myImg,i);

            } catch (ImageProcessingException | IOException | MetadataException ex) {
                Logger.getLogger(LoadDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void AceptarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarButtonActionPerformed
        this.dispose();
//        this.setVisible(false);
    }//GEN-LAST:event_AceptarButtonActionPerformed

    private void OpenImg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenImg1ActionPerformed
        loadIntoMatImage(0);
    }//GEN-LAST:event_OpenImg1ActionPerformed

    private void OpenImg2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenImg2ActionPerformed
        loadIntoMatImage(1);
    }//GEN-LAST:event_OpenImg2ActionPerformed

    private void OpenImg3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenImg3ActionPerformed
        loadIntoMatImage(2);
    }//GEN-LAST:event_OpenImg3ActionPerformed

    private void OpenImg4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenImg4ActionPerformed
        loadIntoMatImage(3);
    }//GEN-LAST:event_OpenImg4ActionPerformed

    private void OpenImg5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenImg5ActionPerformed
        loadIntoMatImage(4);
    }//GEN-LAST:event_OpenImg5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            LoadDialog dialog = new LoadDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AceptarButton;
    private javax.swing.JPanel ImgChooser1;
    private javax.swing.JPanel ImgChooser2;
    private javax.swing.JPanel ImgChooser3;
    private javax.swing.JPanel ImgChooser4;
    private javax.swing.JPanel ImgChooser5;
    private javax.swing.JLabel InstructionsLabel;
    private javax.swing.JButton OpenImg1;
    private javax.swing.JButton OpenImg2;
    private javax.swing.JButton OpenImg3;
    private javax.swing.JButton OpenImg4;
    private javax.swing.JButton OpenImg5;
    private javax.swing.JScrollPane SecuenciaScrollPane;
    private javax.swing.JLabel SequenceLabel;
    private javax.swing.JTextField expTime1;
    private javax.swing.JTextField expTime2;
    private javax.swing.JTextField expTime3;
    private javax.swing.JTextField expTime4;
    private javax.swing.JTextField expTime5;
    private javax.swing.JLabel expTimesLabel;
    private javax.swing.JTextField imgPath1;
    private javax.swing.JTextField imgPath2;
    private javax.swing.JTextField imgPath3;
    private javax.swing.JTextField imgPath4;
    private javax.swing.JTextField imgPath5;
    // End of variables declaration//GEN-END:variables
}
